package com.xyzcorp

import java.net.URL

import com.typesafe.scalalogging.Logger
import org.apache.spark.{SparkConf, SparkContext}
import org.scalatest.{FunSuite, Matchers}
import com.datastax.spark.connector._
import org.apache.spark.sql.SparkSession

class CassandraSparkSpec extends FunSuite with Matchers {

  val logger: Logger = Logger[CassandraSparkSpec]

  test("Case 1: Connecting to a Cassandra host using SparkConf") {
    val conf = new SparkConf(true)
      .set("spark.cassandra.connection.host", "52.33.109.52")
      .set("spark.cassandra.auth.username", "cassandra")
      .set("spark.cassandra.auth.password", "cassandra")

    val sc = new SparkContext("local[*]", "test-app", conf)
    val rdd = sc.cassandraTable("trail", "account")
  }

  test("Case 2: Creating a Spark Session Builder") {
    val spark: SparkSession = SparkSession.builder
      .appName("My Spark Application")  // optional and will be autogenerated if not specified
      .master("local[*]")               // avoid hardcoding the deployment environment
      .enableHiveSupport()              // self-explanatory, isn't it?
      .getOrCreate
  }
}
